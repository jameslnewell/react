name: release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: build packages
        run: |
          yarn run build

      - name: version packages
        run: |
          yarn version apply --all --prerelease

      - name: check if any packages have been versioned
        id: is-repository-dirty
        run: |
          if output=$(git status --porcelain) && [ -z "$output" ]; then
            echo "::set-output name=dirty::false"
          else 
            echo "::set-output name=dirty::true"
          fi

      - name: commit and push changed packages
        if: ${{ steps.is-repository-dirty.outputs.dirty == 'true' }}
        run: |
          git config --global user.name 'jameslnewell-bot'
          git config --global user.email 'jameslnewell-bot@users.noreply.github.com'
          git commit -am "versioning"
          git push

      - name: publish changed packages
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn workspaces foreach --no-private exec \
            yarn npm publish --tag next --access public --tolerate-republish
