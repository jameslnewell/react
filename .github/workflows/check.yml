name: check

on:
  pull_request:

jobs:
  check-constraints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: check constraints
        run: |
          yarn run check:constraints

  check-versioning:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: check versioning
        run: |
          yarn version check

  check-typing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: check typing
        run: |
          yarn run check:typing

  check-linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: check linting
        run: |
          yarn run check:linting

  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: check formatting
        run: |
          yarn run check:formatting

  check-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash -l {0}
        run: nvm install
      - id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install --immutable
          yarn run setup

      - name: check testing
        run: |
          yarn run test
