name: main

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  check_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('yarn.lock') }}
      - run: |
          yarn install

      - name: check dependencies
        run: |
          yarn run check:dependencies

  check_typing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('yarn.lock') }}}
      - run: |
          yarn install

      - name: check typing
        run: |
          yarn run check:typing

  check_linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('yarn.lock') }}'
      - run: |
          yarn install

      - name: check linting
        run: |
          yarn run check:linting

  check_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('yarn.lock') }}
      - run: |
          yarn install

      - name: check formatting
        run: |
          yarn run check:formatting

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('yarn.lock') }}
      - run: |
          yarn install

      - name: build
        run: |
          yarn run build

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            packages/*/dist
            packages/*/*/dist

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('yarn.lock') }}
      - run: |
          yarn install

      - name: test
        run: |
          yarn run test

  publish:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    needs:
      - check_dependencies
      - check_typing
      - check_linting
      - check_formatting
      - build
      - test
    env:
      DEBUG: '*'

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - id: yarn-cache
        uses: actions/cache@v1
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: packages

      - run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc

      - name: publish
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
        run: |
          yarn workspaces run -- publish-if-not-published -- -- --registry=https://registry.npmjs.org/ --tag next
